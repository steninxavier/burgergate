[{"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\api\\product\\index.js":"1","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\api\\product\\[id].js":"2","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\cart.jsx":"3","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\index.js":"4","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\orders\\[Id].jsx":"5","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\product\\[id].jsx":"6","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\_app.js":"7","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\lib\\mongo.js":"8"},{"size":621,"mtime":1646432216274,"results":"9","hashOfConfig":"10"},{"size":875,"mtime":1646509556145,"results":"11","hashOfConfig":"10"},{"size":2392,"mtime":1646662545659,"results":"12","hashOfConfig":"10"},{"size":857,"mtime":1646686801709,"results":"13","hashOfConfig":"10"},{"size":3953,"mtime":1646601552681,"results":"14","hashOfConfig":"10"},{"size":3480,"mtime":1646686809571,"results":"15","hashOfConfig":"10"},{"size":327,"mtime":1646589892139,"results":"16","hashOfConfig":"10"},{"size":682,"mtime":1646343318964,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b0ttqe",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\api\\product\\index.js",[],"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\api\\product\\[id].js",[],"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\cart.jsx",[],"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\index.js",[],"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\orders\\[Id].jsx",[],"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\product\\[id].jsx",["35"],"import React from 'react'\r\nimport Image from 'next/image'\r\nimport styles from '../../styles/Product.module.css'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\nimport { addProduct } from '../../redux/cartSlice'\r\nconst Product = ({burger}) => {\r\n    const [size, setSize] = useState(0);\r\n    const[price,setPrice] =useState(burger.prices[0]);\r\n    const[extras,setExtras] = useState([]);\r\n    const [quantity,setQuantity] = useState(1)\r\n    const Dispatch= useDispatch();\r\n\r\n    const changePrice =(number)=>{\r\n      setPrice(price+ number)\r\n    }\r\n    const handleSize =(sizeIndex)=>{\r\n      const difference = burger.prices[sizeIndex] - burger.prices[size]\r\n      setSize(sizeIndex);\r\n      changePrice(difference)\r\n    }\r\n\r\n  const handleChange =(e,option)=>{\r\n    const checked = e.target.checked;\r\n    if(checked){\r\n      changePrice(option.price);\r\n      setExtras((prev)=>[...prev,option]);\r\n    }else{\r\n      changePrice(-option.price)\r\n      setExtras(extras.filter((extras)=> extras._id !== option._id));\r\n    }\r\n  };\r\n  const handleClick=()=>{\r\n   Dispatch(addProduct({...burger,extras,price,quantity}))\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n<div className={styles.left}>\r\n    <div className={styles.imgcontainer}>\r\n        <Image src={burger.img} layout='fill' objectFit='contain' />\r\n    </div>\r\n</div>\r\n<div className={styles.right}><h1 className={styles.title}>{burger.title}</h1>\r\n        <span className={styles.price}>â‚¬{price}</span>\r\n        <p className={styles.desc}>{burger.desc}</p>\r\n        <h3 className={styles.choose}>Choose the size</h3>\r\n        <div className={styles.sizes}>\r\n          <div className={styles.size} onClick={() => handleSize(0)}>\r\n            <Image src=\"/Images/burger1.png\" layout=\"fill\" alt=\"\" />\r\n            <span className={styles.number}>Small</span>\r\n          </div>\r\n          <div className={styles.size} onClick={() => handleSize(1)}>\r\n            <Image src=\"/Images/burger1.png\" layout=\"fill\" alt=\"\" />\r\n            <span className={styles.number}>Medium</span>\r\n          </div>\r\n          <div className={styles.size} onClick={() => handleSize(2)}>\r\n            <Image src=\"/Images/burger1.png\" layout=\"fill\" alt=\"\" />\r\n            <span className={styles.number}>Large</span>\r\n          </div>\r\n        </div>\r\n        <h3 className={styles.choose}>Choose additional ingredients</h3>\r\n        <div className={styles.ingredients}>\r\n          {burger.extraOptions.map((option) => (\r\n            <div className={styles.option} key={option._id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={option.text}\r\n                name={option.text}\r\n                className={styles.checkbox}\r\n                onChange={(e) => handleChange(e, option)}\r\n              />\r\n              <label htmlFor=\"double\">{option.text}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={styles.add}>\r\n            <input type=\"number\" defaultValue={1} className={styles.quantity} onChange={(e)=>setQuantity(e.target.value)}/>\r\n            <button className={styles.button} onClick={handleClick}>Add to Cart</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport const getServerSideProps = async({params})=>{\r\n  const res =await axios.get(`http://localhost:3000/api/product/${params.id}`);\r\n  return{\r\n    props:{\r\n      burger: res.data,\r\n    },\r\n  };\r\n};\r\n\r\nexport default Product;","C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\pages\\_app.js",[],"C:\\Users\\steni\\OneDrive\\Desktop\\Javascript Projects\\nextjsproject\\lib\\mongo.js",[],{"ruleId":"36","severity":1,"message":"37","line":42,"column":9,"nodeType":"38","endLine":42,"endColumn":69},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]